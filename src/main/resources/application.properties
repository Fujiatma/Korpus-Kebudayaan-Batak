server.port: 8443
server.ssl.key-store: keystore.p12
server.ssl.key-store-password: 123456789
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat


#MySql Connector
# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
spring.datasource.url=jdbc:postgresql://localhost/kotak
spring.datasource.username=postgres
spring.datasource.password=ramosan28
spring.jpa.generate-ddl=true
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#
security.basic.enabled=false

spring.mail.host = smtp.gmail.com
spring.mail.username = korpusbatak@gmail.com
spring.mail.password = korpus123

spring.mail.properties.mail.smptp.auth = true
spring.mail.properties.mail.smptp.socketFactory.port = 465
spring.mail.properties.mail.smptp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smptp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.ssl.enable = true